{"version":3,"sources":["components/note.js","services/note.js","components/notification.js","components/footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","res","data","newObject","post","put","id","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","NoteService","initialNotes","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","e","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","newObj","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCP1CK,EAAU,kCAiBD,EAfA,WAEX,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAahB,EAVA,SAAAC,GAEX,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQhB,EALA,SAACC,GAEZ,OADYL,IAAMO,IAAN,UAAaR,EAAb,YAAwBM,EAAUG,IAAMH,GACzCH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCJhBK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAKA,EAID,qBAAKd,UAAU,QAAf,SACKc,IAJE,MCcAC,EAdA,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2GC4FGC,MAhGf,SAAaC,GACT,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAaAC,qBAVa,WACTC,QAAQC,IAAI,UAOZC,IAAqB5B,MALA,SAAA6B,GACjBH,QAAQC,IAAI,qBACZT,EAASW,QAKD,IAChBH,QAAQC,IAAR,iBAAsBV,EAAMa,OAA5B,WAGA,IAmBMC,EAAcV,EACdJ,EACAA,EAAMe,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAwBhC,OACI,gCACI,uCACA,cAAC,EAAD,CAAce,QAASe,IAEvB,8BACI,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAItC,6BACKU,EAAYE,KAAI,SAAA3C,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBArCX,SAACe,GACxBoB,QAAQC,IAAR,wBAA6BrB,EAA7B,yBAES,sCAAkCA,GAA3C,IACMhB,EAAO2B,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EACYQ,GAAapC,MAAK,SAAAqC,GAEtBnB,EAASa,EAAYE,KAAI,SAAA3C,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAO+C,SAE5DC,OAAM,SAACC,GACJf,EAAgB,aAAD,OAAclC,EAAKK,QAAnB,sCACf6C,YAAW,WACPhB,EAAgB,QACjB,KACHN,EAASa,EAAYC,QAAO,SAAA1C,GAAI,OAAIA,EAAKgB,KAAOA,SAoBhBmC,CAAmBnD,EAAKgB,MAF3ChB,EAAKgB,SAMtB,uBAAMoC,SAjEE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAS,CACXlD,QAASwB,EACT2B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3B5C,GAAIW,EAAMa,OAAS,GAEvBF,EAAmBiB,GAAQ7C,MAAK,SAAAqC,GAC5BnB,EAASD,EAAMkC,OAAOd,IACtBjB,EAAW,QAuDX,UACI,uBAAOgC,MAAOjC,EAASkC,SApDV,SAACV,GAEtBvB,EAAWuB,EAAMW,OAAOF,UAmDhB,wBAAQG,KAAK,SAAb,qBAGJ,cAAC,EAAD,Q,MC9FZC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad3b8afc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note;\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = newObject => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst update = (newObject) => {\n    const req = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return req.then(res => res.data)\n}\n\nexport default {getAll, create, update}\n","const Notification = ({message}) => {\n    if (!message) {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React, {useState, useEffect} from 'react';\n\nimport Note from \"./components/note\";\nimport NoteService from \"./services/note\"\nimport Notification from \"./components/notification\";\nimport Footer from \"./components/footer\";\n\nfunction App(props) {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n    // get all notes\n    const hook = () => {\n        console.log('effect');\n\n        const eventHandler = initialNotes => {\n            console.log('promise fulfilled')\n            setNotes(initialNotes)\n        }\n\n        NoteService.getAll().then(eventHandler)\n    }\n    useEffect(hook, [])\n    console.log(`render ${notes.length} notes`);\n\n    // creat a note\n    const addNote = (event) => {\n        event.preventDefault(); // 阻止提交表单的默认操作\n        const newObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n            id: notes.length + 1\n        }\n        NoteService.create(newObj).then(returnedNote => {\n            setNotes(notes.concat(returnedNote));\n            setNewNote('');\n        })\n    }\n\n    const handleNoteChange = (event) => {\n        // console.log(event.target.value);\n        setNewNote(event.target.value);\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important);\n\n    // update note\n    const toggleImportanceOf = (id) => {\n        console.log(`importance of ${id} needs to be toggled`)\n\n        const url = `http://localhost:3001/notes/${id}`\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        NoteService\n            .update(changedNote).then(returnedNote => {\n                // 捕捉并替换修改项数据\n                setNotes(notesToShow.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch((e) => {\n                setErrorMessage(`the note '${note.content}' was already deleted from server`);\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 5000)\n                setNotes(notesToShow.filter(note => note.id !== id))\n            })\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage}/>\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n\n            <ul>\n                {notesToShow.map(note =>\n                    <Note\n                        key={note.id}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)}/>\n                )}\n            </ul>\n\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
