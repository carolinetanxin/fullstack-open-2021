{"version":3,"sources":["components/note.js","components/notification.js","components/footer.js","services/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","res","data","newObject","put","id","App","props","useState","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","user","useEffect","console","log","NoteService","initialNotes","length","notesToShow","filter","loginForm","name","map","find","n","changedNote","returnedNote","catch","e","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"wLAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCGjCK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAKA,EAID,qBAAKJ,UAAU,QAAf,SACKI,IAJE,MCcAC,EAdA,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2G,gBCVNC,EAAU,aAiBD,EAfA,WAEX,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAahB,EALA,SAACC,GAEZ,OADYL,IAAMM,IAAN,UAAaP,EAAb,YAAwBM,EAAUE,IAAMF,GACzCH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SC8IhBI,MApJf,SAAaC,GACT,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAS,0BAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAAS,IAAzC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBACA,GADA,UACwBA,mBAAS,OAAjC,mBAAOO,EAAP,UA8BAC,qBAVa,WACTC,QAAQC,IAAI,UAOZC,IAAqBnB,MALA,SAAAoB,GACjBH,QAAQC,IAAI,qBACZR,EAASU,QAKD,IAChBH,QAAQC,IAAR,iBAAsBT,EAAMY,OAA5B,WAGA,IAmBMC,EAAcX,EACdF,EACAA,EAAMc,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAqDhC,OACI,gCACI,uCACA,cAAC,EAAD,CAAcK,QAASsB,IAEb,OAATE,OACGS,EACA,gCACI,8BAAIT,EAAKU,KAAT,gBADJ,gBAMJ,8BACI,yBAAQpC,QAAS,kBAAMuB,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAItC,6BACKW,EAAYI,KAAI,SAAA3C,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBA1EX,SAACqB,GACxBY,QAAQC,IAAR,wBAA6Bb,EAA7B,yBAES,sCAAkCA,GAA3C,IACMtB,EAAO0B,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EACYU,GAAa7B,MAAK,SAAA8B,GAEtBpB,EAASY,EAAYI,KAAI,SAAA3C,GAAI,OAAIA,EAAKsB,KAAOA,EAAKtB,EAAO+C,SAE5DC,OAAM,SAACC,GACJlB,EAAgB,aAAD,OAAc/B,EAAKK,QAAnB,sCACf6C,YAAW,WACPnB,EAAgB,QACjB,KACHJ,EAASY,EAAYC,QAAO,SAAAxC,GAAI,OAAIA,EAAKsB,KAAOA,SAyDhB6B,CAAmBnD,EAAKsB,MAF3CtB,EAAKsB,SAMtB,cAAC,EAAD,Q,MCpJZ8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4719981.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note;\n","const Notification = ({message}) => {\n    if (!message) {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\nexport default Footer;\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = newObject => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst update = (newObject) => {\n    const req = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return req.then(res => res.data)\n}\n\nexport default {getAll, create, update}\n","import React, {useState, useEffect} from 'react';\n\nimport Note from \"./components/note\";\nimport Notification from \"./components/notification\";\nimport Footer from \"./components/footer\";\n\nimport NoteService from \"./services/note\"\nimport loginService from \"./services/login\"\n\nfunction App(props) {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    // login\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        console.log('login in with', username, password)\n        try {\n            const user = await loginService.login({username, password})\n            setUser(user)\n            setUsername('')\n            setPassword('')\n        } catch (e) {\n            setErrorMessage('Wrong credentials')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    // get all notes\n    const hook = () => {\n        console.log('effect');\n\n        const eventHandler = initialNotes => {\n            console.log('promise fulfilled')\n            setNotes(initialNotes)\n        }\n\n        NoteService.getAll().then(eventHandler)\n    }\n    useEffect(hook, [])\n    console.log(`render ${notes.length} notes`);\n\n    // creat a note\n    const addNote = (event) => {\n        event.preventDefault(); // 阻止提交表单的默认操作\n        const newObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n            id: notes.length + 1\n        }\n        NoteService.create(newObj).then(returnedNote => {\n            setNotes(notes.concat(returnedNote));\n            setNewNote('');\n        })\n    }\n\n    const handleNoteChange = (event) => {\n        // console.log(event.target.value);\n        setNewNote(event.target.value);\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important);\n\n    // update note\n    const toggleImportanceOf = (id) => {\n        console.log(`importance of ${id} needs to be toggled`)\n\n        const url = `http://localhost:3001/notes/${id}`\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        NoteService\n            .update(changedNote).then(returnedNote => {\n                // 捕捉并替换修改项数据\n                setNotes(notesToShow.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch((e) => {\n                setErrorMessage(`the note '${note.content}' was already deleted from server`);\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 5000)\n                setNotes(notesToShow.filter(note => note.id !== id))\n            })\n    }\n\n    // 登录表单\n    const loginForm = () => {\n        <form onSubmit={handleLogin}>\n            <div>\n                username\n                <input type=\"text\"\n                       value={username}\n                       name=\"Username\"\n                       onChange={(target) => { setUsername(target.value) }}/>\n            </div>\n            <div>\n                password\n                <input type=\"password\"\n                       value={password}\n                       name=\"Password\"\n                       onChange={(target) => { setPassword(target.value) }}/>\n            </div>\n            <button type=\"submit\">login</button>\n        </form>\n    }\n\n    // 添加note表单\n    const noteForm = () => {\n        <form onSubmit={addNote}>\n            <input value={newNote} onChange={handleNoteChange} />\n            <button type=\"submit\">save</button>\n        </form>\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage}/>\n\n            {user === null ?\n                loginForm() :\n                <div>\n                    <p>{user.name} logged-in</p>\n                    noteForm()\n                </div>\n            }\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n\n            <ul>\n                {notesToShow.map(note =>\n                    <Note\n                        key={note.id}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)}/>\n                )}\n            </ul>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}